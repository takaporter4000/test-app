on:
  workflow_dispatch:
env:
  SYNC_GIT_REMOTE: git@gitlab.com:taka-ios-team/test-app.git
  SYNC_GIT_REMOTE_NAME: syncserver 

permissions:
  contents: write

jobs:
  repo-sync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_SYNC_GIT_PRIVATE_KEY }}

    - name: Add Remote Host to Known Hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan gitlab.com >> ~/.ssh/known_hosts

    - name: Add Remote Repository
      run: git remote add $SYNC_GIT_REMOTE_NAME $SYNC_GIT_REMOTE

    - name: fetch all remotes
      run: git fetch --all 

    - name: create branches
      run: |
        echo "doing step 1"
        all_remote_branches=$(git branch -r --list "$SYNC_GIT_REMOTE_NAME/*")
        echo "doing step 2"
        tracked_branches=$(git for-each-ref --format='%(upstream:short)' refs/heads/ | grep "^$SYNC_GIT_REMOTE_NAME/" || true)
        echo "doing step 3"
        tracked_branches_list=$(echo $tracked_branches | tr '\n' ' ')

        echo "doing step 4"
        for remote_branch in $all_remote_branches; do
          local_branch=${remote_branch#$SYNC_GIT_REMOTE_NAME/}
          if [[ ! " $tracked_branches_list " =~ " $remote_branch " ]]; then
            if git show-ref --verify --quiet refs/heads/$local_branch; then
              current_tracking=$(git for-each-ref --format='%(upstream:short)' refs/heads/$local_branch)
              if [[ $current_tracking =~ ^$SYNC_GIT_REMOTE_NAME/ ]]; then
                echo "Error: Local branch $local_branch already tracks a branch on $SYNC_GIT_REMOTE_NAME. Exiting with error."
                exit 1
              else
                echo "Local branch $local_branch exists but does not track any branch on $SYNC_GIT_REMOTE_NAME. Updating to track $remote_branch."
                git branch --set-upstream-to=$remote_branch $local_branch
              fi
            else
              echo "Creating new local branch $local_branch tracking $remote_branch."
              git branch --track $local_branch $remote_branch
            fi
          else
            echo "Local branch $local_branch is already tracked. Skipping."
          fi
        done

    - name: Get 
      run: ./.github/workflows/pull-all-remote-branches.bash

    - name: push latest to sync other 
      run: git push --all $SYNC_GIT_REMOTE_NAME

    - name: Push Changes to this Repo
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: git push --all origin
