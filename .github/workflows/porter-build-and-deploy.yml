name: Build and deploy to AltStore
on:
  workflow_dispatch:
permissions:
  contents: write


env:
  # MUST CHANGE:
  APP_NAME: 'CVCalendar Demo'
    # If you change the App name to one that is not the name of your project be shure to adjust XCODE_NAME

  # MAY CHANGE
  PRODUCTION_RELEASE: ${{ false }}
  REVIEW_BEFORE_RELEASE: ${{ false }} # REVIEW_BEFORE_RELEASE: ${{ true }}
  ## Environment
  XCODE_VERSION: '14.2'
  #Build
  XCODE_BUILD_SDK: iphoneos
  # For more configuration options see CONFIGURATION step


jobs:
  build-and-deploy:
    strategy:
      fail-fast: false
      matrix:
        include:
          - MACOSX_VERSION: 'macos-13'
          
    runs-on:  ${{ matrix.MACOSX_VERSION }}
    steps:
    - name: CONFIGURATION
      run: |
        APP_NAME_BUNDLE_ID="${APP_NAME// /}"
        # SHOULD CHANGE
        echo "ORG_IDENTIFIER=org.${APP_NAME_BUNDLE_ID}" >> $GITHUB_ENV
        echo "BUNDLE_IDENTIFIER=org.${APP_NAME_BUNDLE_ID}.${{ env.XCODE_BUILD_SDK }}.${APP_NAME_BUNDLE_ID}" >> $GITHUB_ENV

        # MAY CHANGE
        RELEASE_VERSION=${GITHUB_REF#refs/*/}; 
        echo "MARKETING_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
        ## Build
        XCODE_NAME="${{ env.APP_NAME }}"

        
        # SHOULDNT CHANGE
        BUILD_FOLDER="./build"
        XCODE_BUILD_ARCHIVE_PATH="${BUILD_FOLDER}/${{ env.APP_NAME }}.xcarchive"
        echo "XCODE_BUILD_SCHME=${XCODE_NAME}" >> $GITHUB_ENV
        echo "ENTITLEMENTS_FILE=${XCODE_NAME}/${XCODE_NAME// /_}.entitlements" >> $GITHUB_ENV
        RESULT_APP_FOLDER="${XCODE_BUILD_ARCHIVE_PATH}/Products/Applications/${{ env.APP_NAME }}.app"
        echo "RESULT_MACHO_BIN=${RESULT_APP_FOLDER}/${{ env.APP_NAME }}" >> $GITHUB_ENV

        # DONT CHANGE (Exports ENV set above fot future steps)
        echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
        echo "XCODE_NAME=${XCODE_NAME}" >> $GITHUB_ENV
        echo "XCODE_BUILD_ARCHIVE_PATH=${XCODE_BUILD_ARCHIVE_PATH}" >> $GITHUB_ENV
        echo "BUILD_FOLDER=${BUILD_FOLDER}" >> $GITHUB_ENV
        echo "RESULT_APP_FOLDER=${RESULT_APP_FOLDER}" >> $GITHUB_ENV

    - name: Test Version name is correct
      run: |
        echo "testing env"
        echo $RELEASE_VERSION
        echo "testing gitlab expansion"
        echo ${{ env.RELEASE_VERSION }}

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: '${{ env.XCODE_VERSION }}'

    - name: Cache DerivedData
      uses: irgaly/xcode-cache@v1
      with:
        key: xcode-cache-deriveddata-${{ github.workflow }}-${{ github.sha }}
        restore-keys: xcode-cache-deriveddata-${{ github.workflow }}-


    - name: pretend xcscheme
      run: |
        SYSTEM_USER=$(whoami)
        echo "The system username of the runner is: $SYSTEM_USER"
        mv  CVCalendar\ Demo.xcodeproj/xcuserdata/x.xcuserdatad  CVCalendar\ Demo.xcodeproj/xcuserdata/"$SYSTEM_USER".xcuserdatad
        ls  CVCalendar\ Demo.xcodeproj/xcuserdata/
  #  - name: Build the App
  #    run: |
  #      xcodebuild MARKETING_VERSION=3 PRODUCT_BUNDLE_IDENTIFIER=test.ib PRODUCT_NAME="THX TaKa" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO  AD_HOC_CODE_SIGNING_ALLOWED=YES -scheme "CVCalendar Demo" -sdk iphoneos  -archivePath ./build/"THX TaKa" archive
    - name: Build the App
      run: |
        xcodebuild \
        archive \
        -scheme "${{ env.XCODE_BUILD_SCHME }}" \
        -sdk "${{ env.XCODE_BUILD_SDK }}" \
        -archivePath "${{ env.XCODE_BUILD_ARCHIVE_PATH }}"  \
        ORG_IDENTIFIER="${{ env.ORG_IDENTIFIER }}" \
        PRODUCT_NAME="${{ env.APP_NAME }}" \
        PRODUCT_BUNDLE_IDENTIFIER="${{ env.BUNDLE_IDENTIFIER }}" \
        CURRENT_PROJECT_VERSION="${{ env.RELEASE_VERSION }}" \
        MARKETING_VERSION="${{ env.RELEASE_VERSION }}" \
        CODE_SIGNING_REQUIRED=NO \
        CODE_SIGNING_ALLOWED=NO \
        CODE_SIGN_IDENTITY="" \
        AD_HOC_CODE_SIGNING_ALLOWED=YES \
        | xcpretty && exit ${PIPESTATUS[0]}

    - name: Install ldid for signing # NOT SHURE IF THIS IS EVEN NECESARRY 
      run: brew install ldid 
    
    - name: Fakesign app
      run: |
        ldid -S ${{ env.ENTITLEMENTS_FILE }}  ${{ env.RESULT_MACHO_BIN }}

    - name: Convert to IPA
      run: |
        mkdir "${{ env.BUILD_FOLDER }}/Payload"
        cp -pR "${{ env.RESULT_APP_FOLDER }}" "${{ env.BUILD_FOLDER }}/Payload/"
        IPA_PATH="${{ env.BUILD_FOLDER }}/${{ env.APP_NAME }}.ipa"
        echo "IPA_PATH=${IPA_PATH}" >> $GITHUB_ENV
        zip -r ${IPA_PATH} ${{ env.BUILD_FOLDER }}/Payload"


    - name: Build Changelog on PRs 
      uses: mikepenz/release-changelog-builder-action@v5
      id: build_changelog_on_prs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Changelog on commits 
      uses: mikepenz/release-changelog-builder-action@v5
      id: build_changelog_on_commits
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get current date
      id: date
      run: echo "date=$(date -u +'%Y-%m-%d %c')" >> $GITHUB_OUTPUT

    - name: Upload to new stable release and create draft
      uses: softprops/action-gh-release@v1
      id: upload_and_draft
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: ${{ env.RELEASE_VERSION }}
        tag_name: ${{ env.RELEASE_VERSION }}
        draft: true
        make_latest: ${{ env.PRODUCTION_RELEASE }}
        prerelease: ${{ !env.PRODUCTION_RELEASE }}
        files: ${{ env.IPA_PATH }}
        body: |
          ## Changelog
          ${{ steps.build_changelog_on_prs.outputs.changelog }}

          ## Changelog based on Commits
          ${{ steps.build_changelog_on_commits.outputs.changelog }}

          ## Build Info
          
          Built at (UTC): `${{ steps.date.outputs.date }}`
          Commit SHA: `${{ github.sha }}`
          Version: `${{ env.RELEASE_VERSION }}`
          Github action run:  `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
          SHA256 hash: `${{ hashFiles(env.IPA_PATH) }}`

          **Full Changelog**: ${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.build_changelog_on_prs.outputs.fromTag }}...${{ env.RELEASE_VERSION }}

    - uses: khasanovbi/telegram-manual-approval@v0.0.2
      if: ${{ env.REVIEW_BEFORE_RELEASE }}
      with:
        telegram-key: ${{ secrets.TELEGRAM_KEY }}
        telegram-chat-id: ${{ vars.TELEGRAM_CHAT_ID }}
        approval-text: 'ready for release, checkout the draft at: ${{ steps.upload_and_draft.outputs.url }} and the diff under: ${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.build_changelog_on_prs.outputs.fromTag }}...${{ env.RELEASE_VERSION }}'


#   - name: Wait for Release Review
#     if: ${{ env.REVIEW_BEFORE_RELEASE }}
#     environment: 'Review Release'
#     run: |
#       echo "ready for release, checkout the draft at: ${{ steps.upload_and_draft.outputs.url }} and the diff under: ${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.build_changelog_on_prs.outputs.fromTag }}...${{ env.RELEASE_VERSION }} 
#
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.upload_and_draft.outputs.id }}



#        xcodebuild \
#  
#        -scheme "CVCalendar Demo" \
#        -sdk "iphoneos" \
#        -archivePath "${{ env.XCODE_BUILD_ARCHIVE_PATH }}"  \
#        ORG_IDENTIFIER="${{ env.ORG_IDENTIFIER }}" \
#        PRODUCT_NAME="${{ env.APP_NAME }}" \
#        PRODUCT_BUNDLE_IDENTIFIER="${{ env.BUNDLE_IDENTIFIER }}" \
#        CURRENT_PROJECT_VERSION="${{ env.RELEASE_VERSION }}" \
#        MARKETING_VERSION="${{ env.RELEASE_VERSION }}" 
#        CODE_SIGNING_REQUIRED=NO \
#        CODE_SIGNING_ALLOWED=NO \
#        CODE_SIGN_IDENTITY="" \
#        AD_HOC_CODE_SIGNING_ALLOWED=YES \
#        archive \
#        | xcpretty && exit ${PIPESTATUS[0]}
#
#
#xcodebuild archive -scheme "CVCalendar Demo" -sdk iphoneos -archivePath "./build/CVCalendar Demo" ORG_IDENTIFIER=org.CVCalendarDemo "PRODUCT_NAME=CVCalendar Demo" PRODUCT_BUNDLE_IDENTIFIER=org.CVCalendarDemo.iphoneos.CVCalendarDemo CURRENT_PROJECT_VERSION=1.0.4 MARKETING_VERSION=1.0.4